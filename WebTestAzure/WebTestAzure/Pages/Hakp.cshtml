@page
@model WebTestAzure.Pages.HakpModel
@{
    ViewData["Title"] = "HakP";
}

<div class="text-center">
    <h1 class="display-4">HAK TestAzure Razor</h1>
    <h2>(dotnet new razor)</h2>
    <p>
        Zu finden unter <a href="https://webtestazure20221009184457.azurewebsites.net">webtestazure20221009184457.azurewebsites.net</a>.
    </p>
    <p>
        Portal <a href="https://portal.azure.com/#home" @{
                  Output.Write(Program._target);
                  }>https://portal.azure.com/#home</a>.
    </p>
    <p>
        <a href="https://github.com/hermannakruse/hermannakruse" @{
           Output.Write(Program._target);
           } title="GitHub hermannakruse" type="text/html">GitHub hermannakruse</a>
    </p>
    <picture>
        <source media="(min-width: 1200px)" srcset="../bilder/RahelBig.jpg">
        <source media="(min-width: 768px)" srcset="../bilder/RahelPho.jpg">
        <!---Fallback--->
        <img src="../bilder/RahelPho2.jpg" alt="wilde Blume von einem Gebirgssee">
    </picture>
</div>
<style>
    .beAusgabe {
        margin-top: 1em;
        border: thin solid red;
        padding:0.5em;
        text-align: center;
        overflow-wrap: break-word;
    }

    .beLine {
        color: gray;
        font-weight: 100;
    }

    .beBold {
        font-weight: 500;
    }

</style>
<div class="beAusgabe">
    @{
        var sb = new System.Text.StringBuilder();
        string myLocalTime = "W. Europe Standard Time";// TimeZoneInfo.Local.Id;
        var dT = Program.nowD.ToUniversalTime();
        TimeZoneInfo myLocalTimeZone = TimeZoneInfo.FindSystemTimeZoneById(myLocalTime);
        try
        {
            sb.Append($@"<p>{myLocalTime} : {TimeZoneInfo.ConvertTime(dT, myLocalTimeZone):dd\.MM\.yyyy HH\:mm\:ss}</p>");
            //Output.Write($@"<p>{myLocalTime} : {TimeZoneInfo.ConvertTime(dT, myLocalTimeZone):dd\.MM\.yyyy HH\:mm\:ss}</p>");
        }
        catch (TimeZoneNotFoundException)
        {
            Output.Write("Unable to find the {0} zone in the registry.",
            myLocalTime);
        }
        var id = $"{HttpContext.Connection.RemoteIpAddress}:{HttpContext.Connection.RemotePort}";
        var z1 = "<div class=\"beLine\">";
        var z2 = "</div>";
        var s1 = "<span class=\"beBold\">";
        var s2 = "</span>";
        foreach (string c in Program.showSec.OrderBy(c => c))
        {
            if (id == c)
            {
                sb.Append($"{z1}{s1}UserID: {c}{s2}{z2}");
            }
            else
            {
                sb.Append($"{z1}UserIDs: {c}{z2}");
            }
        }

        List<string> list = new List<string>();
        var gD = System.Environment.GetEnvironmentVariables();
        var gDK = gD.Keys.Cast<string>().OrderBy(c => c);
        foreach (var c_ in gDK)
        {
            var c = c_?.ToString();
            if (!string.IsNullOrEmpty(c))
            {
                var val = gD[c]?.ToString();
                if (!string.IsNullOrEmpty(val))
                {
                    var t = $"{s1}{HtmlEncoder.Encode(c.ToString())} :{s2} {HtmlEncoder.Encode(val.ToString())}";
                    sb.AppendLine($"{z1}{t}{z2}");
                }
            }
        }
        Output.WriteLine(sb);
    }
</div>

